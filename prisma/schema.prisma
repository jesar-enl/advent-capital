// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

model Application {
  id          Int   @id @default(autoincrement())
  image       String  @unique
  surname     String
  othername   String
  email       String
  dob         DateTime
  gender      String
  marital     String
  mobile      String
  nin         String
  nindate     DateTime
  type        String
  owner       String
  period      String
  district    String
  village     String
  role        String
  child       String
  spoucename  String
  spoucemobile String
  spouceemail String
  purpose     String
  loantype    String
  amount      String
  duration    String
  words       String
  source      String
  bustype     String
  permonth    String
  collateral  String
  appname     String
  appdate     DateTime
  status Status @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  admin
  user
}

model UserProfile {
  id                 String    @id @default(cuid())
  username           String?
  userId             String    
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  user               User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                  String    @id @default(cuid())
  name                String?
  email               String?   @unique
  emailVerified       Boolean @default(false)
  emailVerifiedDate   DateTime?
  password            String
  hashedPassword      String
  role                Role      @default(user)
  image               String?
  verifyCount         Int?
  verificationToken   String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  profile             UserProfile[]
  session             Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Letter {
  id          Int   @id @default(autoincrement())
  name        String
  email       String
  date        DateTime
  bustype     String
  busLocation String
  loanType    String
  purpose     String
  loanAmount  String
  loanInterest String
  security    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}